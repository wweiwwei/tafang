import { autowired, message, registerClass } from "../../../framework/Decorator";
import ResourceLoader from "../../../framework/ResourceLoader";
import UIButton from "../../../framework/ui/UIButton";
import UIImage from "../../../framework/ui/UIImage";
import UILabel from "../../../framework/ui/UILabel";
import UIList from "../../../framework/ui/UIList";
import UISpine from "../../../framework/ui/UISpine";
import UIWindow from "../../../framework/ui/UIWindow";
import { WindowOpenAnimationEnum, WindowOpenOption } from "../../../framework/ui/GWindow";
import EventName from "../../event/EventName";
import WindowDiamondShop from "../mainscene/WindowDiamondShop";

const { ccclass, property } = cc._decorator;

@registerClass("WindowHeroDetail")
@ccclass
export default class WindowHeroDetail extends UIWindow {
    static defaultOpentOption: Partial<WindowOpenOption> = {
        animation: WindowOpenAnimationEnum.no,
    };
    _windowParam: any;
    _returnValue: any;
    /** */

    /**体力 */
    @autowired(UIButton) powerBtn: UIButton = null;
    /**玉 */
    @autowired(UIButton) jadeBtn: UIButton = null;
    /**银 */
    @autowired(UIButton) silverBtn: UIButton = null;
    /**英雄名称 */
    @autowired(UILabel) heroName: UILabel = null;
    /**阶段 */
    @autowired(UILabel) stage: UILabel = null;
    @autowired(UIImage) shadow: UIImage = null;
    @autowired(UISpine) mount: UISpine = null;
    // @autowired(UIImage) heroImg: UIImage = null;

    /**皮肤属性加成节点 */
    @autowired(cc.Node) skinProperty: cc.Node = null;
    /**皮肤属性加成 */
    @autowired(UIList) skinPropertyList: UIList<ListItemSkinProperty> = null;
    /**装备按钮 */
    @autowired(UIButton) equipmentBtn: UIButton = null;
    /**皮肤按钮 */
    @autowired(UIButton) skinBtn: UIButton = null;
    /**坐骑按钮 */
    @autowired(UIButton) mountBtn: UIButton = null;

    /**装备 */
    @autowired(UIList) equipmentList: UIList<ListItemCommonItem> = null;
    /**皮肤列表 */
    @autowired(UIList) skinList: UIList<ListItemCommonItem> = null;
    /**坐骑列表 */
    @autowired(UIList) mountList: UIList<ListItemCommonItem> = null;

    protected onInited(): void {
        this.node.zIndex = -1;
        this.refEquipmentList();
        this.even();
        this.refMenuBtn();
        this.refMenuTips();
        this.windowInit();
    }

    private touchMenu: number = 0;

    even() {
        this.silverBtn.onClick = () => {
            GWindow.open(WindowDiamondShop);
        };
        this.jadeBtn.onClick = () => {
            GWindow.open(WindowDiamondShop);
        };
        this.powerBtn.onClick = () => {
            GWindow.open(WindowDiamondShop);
        };
        this.powerBtn.onClick = () => {};
        this.jadeBtn.onClick = () => {};
        this.silverBtn.onClick = () => {};

        this.equipmentBtn.onClick = () => {
            this.touchMenu = 0;
            this.refMenuBtn();
        };
        this.skinBtn.onClick = () => {
            this.touchMenu = 1;
            this.refMenuBtn();
        };
        this.mountBtn.onClick = () => {
            this.touchMenu = 2;
            this.refMenuBtn();
        };
    }

    /**初始化数据 */
    @message([EventName.stateKey.storage])
    windowInit() {
        this.powerBtn.text.setText(["_rs" + GUtils.ui.getNumberString(GModel.knapsack.getStorageById(10016), 7)]);
        this.jadeBtn.text.setText(["_rs" + GUtils.ui.getNumberString(GModel.knapsack.getStorageById(10002), 7)]);
        this.silverBtn.text.setText(["_rs" + GUtils.ui.getNumberString(GModel.knapsack.getStorageById(10014), 7)]);
    }

    refMenuBtn() {
        if (this.touchMenu == 0) this.refEquipmentList();
        else if (this.touchMenu == 1) {
            this.refSkinList();
        } else if (this.touchMenu == 2) this.refMountList();
        this.skinProperty.active = this.touchMenu == 1;
        this.equipmentList.node.active = this.touchMenu == 0;
        this.skinList.node.active = this.touchMenu == 1;
        this.mountList.node.active = this.touchMenu == 2;
        this.equipmentBtn.node.getChildByName("high").active = this.touchMenu == 0;
        this.skinBtn.node.getChildByName("high").active = this.touchMenu == 1;
        this.mountBtn.node.getChildByName("high").active = this.touchMenu == 2;
    }

    refMenuTips() {
        this.equipmentBtn.node.getChildByName("tips").active = false;
        this.skinBtn.node.getChildByName("tips").active = false;
        this.mountBtn.node.getChildByName("tips").active = false;
    }

    refEquipmentList() {
        let clickItem = () => {
            GWindow.open(WindowPropertyDetails, {});
        };
        this.equipmentList.setState([{ id: 0, quailtyImg: "", icon: "", cb: clickItem }]);
    }

    refSkinList() {
        let clickItem = () => {};
        this.skinList.setState([{ id: 0, quailtyImg: "", icon: "", cb: clickItem }]);
    }
    refMountList() {
        let clickItem = () => {};
        this.mountList.setState([{ id: 0, quailtyImg: "", icon: "", cb: clickItem }]);
    }
}
