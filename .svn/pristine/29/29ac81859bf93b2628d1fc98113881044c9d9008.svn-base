import { autowired, registerClass } from "../../../framework/Decorator";
import UIButton from "../../../framework/ui/UIButton";
import UIImage from "../../../framework/ui/UIImage";
import UILabel from "../../../framework/ui/UILabel";
import UIListItem from "../../../framework/ui/UIListItem";

const { ccclass, property } = cc._decorator;
@registerClass("ListItemDiamondItem2")
@ccclass
export default class ListItemDiamondItem2 extends UIListItem {
    @autowired(UIImage) image: UIImage = null;
    @autowired(cc.Node) first: cc.Node = null;
    @autowired(UILabel) count: UILabel = null;
    @autowired(UILabel) price: UILabel = null;
    @autowired(UILabel) tips: UILabel = null;
    @autowired(UIButton) btn: UIButton = null;
    state: { id: number; cb: () => void; index: number };
    setState(state: this["state"]): void {
        this.state = state;
        this.btn.onClick = this.state.cb;
        let tbl = GTable.getById("ChargeTbl", this.state.id);
        this.price.setText(["_rsï¿¥" + tbl.cny / 100]);
        this.count.setText([tbl.name]);
        this.first.active = tbl.kind === 1 && !GState.data.charge.order.some((o) => o.itemId === this.state.id);
        this.tips.setText(["_rs+"], [tbl.description]);
        this.image.imgName = tbl.kind === 1 ? `fen_0${this.state.index}` : `lan_0${this.state.index}`;
    }
}
